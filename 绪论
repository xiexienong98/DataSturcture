数据（data）：数据是对客观事物的符号表示，在计算机科学中是指所有能输入到计算机中并被计算机程序处理的符号的总称。它是计算机程序加工的“原料”。
数据元素（data element）：数据元素是数据的基本单位，在计算机程序中通常作为一个整体进行考虑和处理。
数据项（data item）：数据项是数据的不可分割的最小单位。
数据对象（data object）：数据对象是性质相同的数据元素的集合，是数据的一个子集。
数据结构（data structure）：数据结构是相互之间存在一种或多种特定关系的数据元素的集合。
结构（structure）：数据元素相互之间的关系。
                 集合，线性结构，树形结构，图状结构或网状结构。
逻辑结构（logic structure）：结构定义中描述数据元素之间关系的“关系”。
物理结构（physic structure）：数据结构在计算机中的表示（映像），又称存储结构（storage structure）。
结点（node）：当数据元素由若干数据项组成时，位串中对应于各个数据项的子位串，又称元素（element）。
数据元素之间的关系在计算机中有两种不同的表示方法：顺序映像和非顺序映像，并由此得到两种不同的存储结构：顺序存储结构和链式存储结构。
数据结构在C虚拟处理器中的表示，称为虚拟存储结构。
数据类型（data type）：一个值的集合和定义在这个值集上的一组操作的总称。
按“值”的不同特性，高级程序语言中的数据类型可分为两类：一类是非结构的原子类型，另一类是结构类型。
抽象数据类型（abstract data type）：一个数学模型以及定义在该模型上的一组操作。
                                  原子类型（atomic data type）：原子类型的变量的值是不可分解的。
                                  固定聚合类型（fixed-aggregate data type）：固定聚合类型的变量的“值”的由确定数目的成分按某种结构组成。
                                  可变聚合类型（variable-aggregate data type）：可变聚合类型的变量的“值”的成分的数目不确定。
                                  多形数据类型（polymorphic data type）：多形数据类型的变量的“值”的成分不确定。
算法（algorithm）:算法是对特定问题求解步骤的一种描述，它是指令的有限序列，其中每一条指令表示一个或多个操作。
算法有五个重要特性：有穷性，确定性，可行性，输入，输出。
算法设计的要求：正确性，可读性，健壮性，效率与低存储量要求。
算法效率的度量：时间复杂度，空间复杂度。
频度：语句重复执行的次数。
